% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Distribution.R
\name{Distribution}
\alias{Distribution}
\title{Generalised Distribution Object}
\arguments{
\item{name}{full name of distribution.}

\item{short_name}{short name to identify distribution.}

\item{type}{R6 Set; the scientific type.}

\item{support}{R6 Set; distribution support. See Details.}

\item{distrDomain}{R6 Set; distribution domain See Details.}

\item{symmetric}{logical; is distribution symmetric?}

\item{pdf}{function. See Details.}

\item{cdf}{function. See Details.}

\item{quantile}{function. See Details.}

\item{rand}{function. See Details.}

\item{parameters}{S3 ParameterSet. See Details.}

\item{paramValues}{list. See Details.}

\item{decorators}{list of decorators to add in construction.}

\item{valueSupport}{continuous, discrete, mixture. See Details.}

\item{variateForm}{univariate, multivariate, matrixvariate. See Details.}

\item{description}{short description of distribution.}
}
\value{
\code{Distribution$new} constructs an R6 object of class Distribution.
}
\description{
A generalised distribution object for defining custom probability distributions
  as well as serving as the parent class to specific, familiar distributions. Common
  mathematical and statistical methods for distributions are defined here with approximate numerical
  calculations (as opposed to analytical results).
}
\details{
The primary purpose of the Distribution object is to serve as the parent class
  to all other distributions, therefore all methods are approximate numeric calculations
  and the user may prefer to utilise decorators to improve accuracy.

  \code{type}, \code{support} and \code{distrDomain} should be given as an R6 SetInterval
  object. If none are supplied then the set of Reals is taken to be the type, support and domain
  of the distribution. If only \code{type} is supplied then this is taken to also be the support
  and domain.

  By default, missing \code{pdf}, \code{cdf} and \code{quantile} are not automatically imputed.
  Use the imputation wrappers (see below) to geenrate these with a selected method.
  The \code{rand} function is automatically generated depending on which of the above are supplied.
  The generation for this is performed according to the hierarchy: quantile -> rand, cdf -> rand, pdf -> rand.

  \code{parameters} should be supplied as a ParameterSet. The distribution parameterisation
  is taken to be whichever parameters are flagged as 'settable', any others in the ParameterSet
  are automatically updated by a given function. \code{paramValues} is an optional list giving the
  values to set the parameters (if not default or given in the ParameterSet.

  \code{decorators} is a list of decorators (R6 environments not strings) to decorate the
  Distribution with in construction. Decorators can also be added after construction. See
  \code{\link{DistributionDecorator}} for more details.

  \code{valueSupport} and \code{variateForm} if not given are automatically filled from
  \code{type} and \code{support}.
}
\seealso{
\code{\link{SetInteval}} and \code{\link{SpecialSet}} for details on Sets and
Intervals. See \code{\link{makeParameterSet}} for parameter details. See \code{\link{DistributionDecorator}} for
Decorator details.
}
