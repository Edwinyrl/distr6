% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Distribution.R
\name{Distribution}
\alias{Distribution}
\title{Generalised Distribution Object}
\description{
A generalised distribution object for defining custom probability distributions
  as well as serving as the parent class to specific, familiar distributions. Common
  mathematical and statistical methods for distributions are defined here with approximate numerical
  calculations (as opposed to analytical results).
}
\section{Constructor Arguments}{

\tabular{ll}{
\code{name} \tab full name of distribution. \cr
\code{short_name} \tab short name to identify distribution. \cr
\code{type} \tab R6 Set; the scientific type. \cr
\code{support} \tab R6 Set; distribution support. See Details. \cr
\code{distrDomain} \tab R6 Set; distribution domain See Details. \cr
\code{symmetric} \tab logical; is distribution symmetric? \cr
\code{pdf} \tab function. See Details. \cr
\code{cdf} \tab function. See Details. \cr
\code{quantile} \tab function. See Details. \cr
\code{rand} \tab function. See Details. \cr
\code{parameters} \tab S3 ParameterSet. See Details. \cr
\code{paramValues} \tab list. See Details. \cr
\code{decorators} \tab list of decorators to add in construction. \cr
\code{valueSupport} \tab continuous, discrete, mixture. See Details. \cr
\code{variateForm} \tab univariate, multivariate, matrixvariate. See Details. \cr
\code{description} \tab short description of distribution.
}
}

\section{Constructor Details}{
 The primary purpose of the Distribution object is to serve as the parent class
  to all other distributions, therefore all methods are approximate numeric calculations
  and the user may prefer to utilise decorators to improve accuracy.

  \code{type}, \code{support} and \code{distrDomain} should be given as an R6 SetInterval
  object. If none are supplied then the set of Reals is taken to be the type, support and domain
  of the distribution. If only \code{type} is supplied then this is taken to also be the support
  and domain.

  By default, missing \code{pdf}, \code{cdf} and \code{quantile} are not automatically imputed.
  Use the imputation wrappers (see below) to geenrate these with a selected method.
  The \code{rand} function is automatically generated depending on which of the above are supplied.
  The generation for this is performed according to the hierarchy: quantile -> rand, cdf -> rand, pdf -> rand.

  \code{parameters} should be supplied as a ParameterSet. The distribution parameterisation
  is taken to be whichever parameters are flagged as 'settable', any others in the ParameterSet
  are automatically updated by a given function. \code{paramValues} is an optional list giving the
  values to set the parameters (if not default or given in the ParameterSet.

  \code{decorators} is a list of decorators (R6 environments not strings) to decorate the
  Distribution with in construction. Decorators can also be added after construction. See
  \code{\link{DistributionDecorator}} for more details.

  \code{valueSupport} and \code{variateForm} if not given are automatically filled from
  \code{type} and \code{support}.
}

\section{Public Methods}{

 \tabular{ll}{
  \code{strprint()} \tab Character representation of print \cr
  \code{print()} \tab Print method \cr
  \code{summary(full = T)} \tab Summary method \cr
  \code{plot()} \tab Plotting method \cr
  \code{qqplot()} \tab QQ-Plots \cr
  \code{name()} \tab Name accessor \cr
  \code{short_name()} \tab Short name accessor \cr
  \code{description()} \tab Description accessor \cr
  \code{decorators()} \tab Decorators accessor \cr
  \code{traits()} \tab Traits accessor \cr
  \code{valueSupport()} \tab Value support accessor \cr
  \code{variateForm()} \tab Variate form accessor \cr
  \code{type()} \tab Type accessor \cr
  \code{properties()} \tab Properties accessor \cr
  \code{support()} \tab Support accessor \cr
  \code{distrDomain()} \tab Distribution domain accessor \cr
  \code{symmetry()} \tab Symmetry accessor \cr
  \code{parameters(id,as.df = FALSE)} \tab Parameters accessor. See \code{\link{ParameterSet}}. \cr
  \code{getParameterValue(id)} \tab Parameter value accessor. See \code{\link{ParameterSet}}. \cr
  \code{setParameterValue(lst)} \tab Set parameter value. See \code{\link{ParameterSet}}. \cr
  \code{pdf(x, log = F)} \tab Evaluate density/mass at x. \cr
  \code{cdf(q, lower.tail = T, log.p = F)} \tab Evaluate distribution function at q. \cr
  \code{quantile(p, lower.tail = T, log.p = F)} \tab Evaluate quantile function at p. \cr
  \code{rand(n)} \tab Randomly simulate n draws from distribution. \cr
  \code{expectation(trafo)} \tab Calculate expectation of distribution. \cr
  \code{var()} \tab Calculate variance of distribution. \cr
  \code{sd()} \tab Calculate standard deviation of distribution. \cr
  \code{cov()} \tab Calculate covariance of distribution. See Details. \cr
  \code{cor()} \tab Calculate correlation of distribution. See Details. \cr
  \code{median()} \tab Calculate median of distribution. \cr
  \code{mode(which = 1)} \tab Calculate mode of distribution. See Details. \cr
  \code{sup()} \tab Get supremum of distribution. \cr
  \code{inf()} \tab Get infimum of distribution. \cr
  \code{liesInSupport(x, all = TRUE)} \tab Does x lie in the support of distribution? \cr
  \code{liesInType(x)} \tab Does x lie in the type of distribution? \cr
  \code{liesInDistrDomain(x)} \tab Does x lie in the domain of distribution? \cr
}
}

\section{Public Methods Details}{

\code{cov} defaults to \code{var} for univariate distributions and \code{cor} returns NULL.
\code{mode} returns by default the first mode of the distribution where applicable, otherwise a specified
integer or all.
}

\seealso{
See \code{\link{SetInterval}} and \code{\link{SpecialSet}} for details on Sets and
Intervals. See \code{\link{ParameterSet}} for parameter details. See
\code{\link{DistributionDecorator}} for Decorator details. See \code{\link[stats]{Binomial}} for
details on the arguments to \code{pdf}/\code{cdf}/\code{quantile}/\code{rand}.
}
