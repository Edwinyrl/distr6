yaxt = "n",
main = "Nicolas Cage vs. A&E")
axis(side = 2, at = seq.int(1.0e+07,2.5e+07,length.out = 5),
labels = seq.int(1.0e+07,2.5e+07,length.out = 5)/1000000)
pred = lm(unlist(attend[1:23,2]) ~ as.numeric(film_freq)[1:23])
abline(pred, lty = 2, col= "red", lwd=2)
points(x = 5, y = 21380985, pch = 15, cex = 2, col = "darkgreen")
abline(v = 5, h = (pred$coefficients[1]+pred$coefficients[2]*5), pch = 17, cex = 2, col = "purple")
abline(v = 5, h = (pred$coefficients[1]+pred$coefficients[2]*5), col = "purple", lty = 2)
# Plot film frequency vs Admissions
plot(y = as.numeric(unlist(attend[1:23,2])),
x = as.numeric(film_freq[1:23]),
xlab = "Number of Nicolas Cage Films",
ylab = "Number of UK A&E Admissions (millions)",
xlim = c(1,5), ylim = c(1.0e+07, 2.5e+07),
yaxt = "n",
main = "Nicolas Cage vs. A&E")
axis(side = 2, at = seq.int(1.0e+07,2.5e+07,length.out = 5),
labels = seq.int(1.0e+07,2.5e+07,length.out = 5)/1000000)
pred = lm(unlist(attend[1:23,2]) ~ as.numeric(film_freq)[1:23])
abline(pred, lty = 2, col= "red", lwd=2)
points(x = 5, y = 21380985, pch = 15, cex = 2, col = "darkgreen")
abline(v = 5, h = (pred$coefficients[1]+pred$coefficients[2]*5), col = "purple", lty = 3)
# Plot film frequency vs Admissions
plot(y = as.numeric(unlist(attend[1:23,2])),
x = as.numeric(film_freq[1:23]),
xlab = "Number of Nicolas Cage Films",
ylab = "Number of UK A&E Admissions (millions)",
xlim = c(1,5), ylim = c(1.0e+07, 2.5e+07),
yaxt = "n",
main = "Nicolas Cage vs. A&E")
axis(side = 2, at = seq.int(1.0e+07,2.5e+07,length.out = 5),
labels = seq.int(1.0e+07,2.5e+07,length.out = 5)/1000000)
pred = lm(unlist(attend[1:23,2]) ~ as.numeric(film_freq)[1:23])
abline(pred, lty = 2, col= "red", lwd=2)
points(x = 5, y = 21380985, pch = 15, cex = 2, col = "darkgreen")
abline(v = 5, h = (pred$coefficients[1]+pred$coefficients[2]*5), col = "purple", lty = 3)
legend("bottomright", lty = c(2,3,3,NA,NA), pch = c(NA,NA,NA,15,17),
col = c("red","purple","darkgreen"), lwd = 2,
legend = c(paste("Correlation =",prettyNum(pred$coefficients[2],big.mark=",")),
paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
# Plot film frequency vs Admissions
plot(y = as.numeric(unlist(attend[1:23,2])),
x = as.numeric(film_freq[1:23]),
xlab = "Number of Nicolas Cage Films",
ylab = "Number of UK A&E Admissions (millions)",
xlim = c(1,5), ylim = c(1.0e+07, 2.5e+07),
yaxt = "n",
main = "Nicolas Cage vs. A&E")
axis(side = 2, at = seq.int(1.0e+07,2.5e+07,length.out = 5),
labels = seq.int(1.0e+07,2.5e+07,length.out = 5)/1000000)
pred = lm(unlist(attend[1:23,2]) ~ as.numeric(film_freq)[1:23])
abline(pred, lty = 2, col= "red", lwd=2)
points(x = 5, y = 21380985, pch = 15, cex = 2, col = "darkgreen")
abline(v = 5, h = (pred$coefficients[1]+pred$coefficients[2]*5), col = "purple", lty = 3)
legend("bottomright", lty = c(2,3,NA), pch = c(NA,NA,17),
col = c("red","purple","darkgreen"), lwd = 2,
legend = c(paste("Correlation =",prettyNum(pred$coefficients[2],big.mark=",")),
paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
legend("topright", lty = c(2,3,NA), pch = c(NA,NA,17),
col = c("red","purple","darkgreen"), lwd = 2,
legend = c(paste("Correlation =",prettyNum(pred$coefficients[2],big.mark=",")),
paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
plot(y = as.numeric(unlist(attend[1:23,2])),
x = as.numeric(film_freq[1:23]),
xlab = "Number of Nicolas Cage Films",
ylab = "Number of UK A&E Admissions (millions)",
xlim = c(1,5), ylim = c(1.0e+07, 2.5e+07),
yaxt = "n",
main = "Nicolas Cage vs. A&E")
axis(side = 2, at = seq.int(1.0e+07,2.5e+07,length.out = 5),
labels = seq.int(1.0e+07,2.5e+07,length.out = 5)/1000000)
pred = lm(unlist(attend[1:23,2]) ~ as.numeric(film_freq)[1:23])
abline(pred, lty = 2, col= "red", lwd=2)
points(x = 5, y = 21380985, pch = 15, cex = 2, col = "darkgreen")
abline(v = 5, h = (pred$coefficients[1]+pred$coefficients[2]*5), col = "purple", lty = 3)
legend("topright", lty = c(2,3,NA), pch = c(NA,NA,17),
col = c("red","purple","darkgreen"), lwd = 2,
legend = c(paste("Correlation =",prettyNum(pred$coefficients[2],big.mark=",")),
paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
# Plot film frequency vs Admissions
plot(y = as.numeric(unlist(attend[1:23,2])),
x = as.numeric(film_freq[1:23]),
xlab = "Number of Nicolas Cage Films",
ylab = "Number of UK A&E Admissions (millions)",
xlim = c(1,5), ylim = c(1.0e+07, 2.5e+07),
yaxt = "n",
main = "Nicolas Cage vs. A&E")
axis(side = 2, at = seq.int(1.0e+07,2.5e+07,length.out = 5),
labels = seq.int(1.0e+07,2.5e+07,length.out = 5)/1000000)
pred = lm(unlist(attend[1:23,2]) ~ as.numeric(film_freq)[1:23])
#abline(pred, lty = 2, col= "red", lwd=2)
points(x = 5, y = 21380985, pch = 15, cex = 2, col = "darkgreen")
abline(v = 5, h = (pred$coefficients[1]+pred$coefficients[2]*5), col = "blue", lty = 2)
legend("topright", lty = c(2,NA), pch = c(NA,NA,17),
col = c("blue","darkgreen"), lwd = 2,
legend = c(paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
legend("topright", lty = c(2,NA), pch = c(NA,17),
col = c("blue","darkgreen"), lwd = 2,
legend = c(paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
plot(y = as.numeric(unlist(attend[1:23,2])),
x = as.numeric(film_freq[1:23]),
xlab = "Number of Nicolas Cage Films",
ylab = "Number of UK A&E Admissions (millions)",
xlim = c(1,5), ylim = c(1.0e+07, 2.5e+07),
yaxt = "n",
main = "Nicolas Cage vs. A&E")
axis(side = 2, at = seq.int(1.0e+07,2.5e+07,length.out = 5),
labels = seq.int(1.0e+07,2.5e+07,length.out = 5)/1000000)
pred = lm(unlist(attend[1:23,2]) ~ as.numeric(film_freq)[1:23])
#abline(pred, lty = 2, col= "red", lwd=2)
abline(v = 5, h = (pred$coefficients[1]+pred$coefficients[2]*5), col = "blue", lty = 2)
points(x = 5, y = 21380985, pch = 15, cex = 2, col = "red")
legend("topright", lty = c(2,NA), pch = c(NA,17),
col = c("blue","red"), lwd = 2,
legend = c(paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
dev.copy(png,"freqvsattend.png",width=8,height=7,units="in",res=100)
dev.off()
plot(y = as.numeric(unlist(attend[1:23,2])),
x = as.numeric(film_freq[1:23]),
xlab = "Number of Nicolas Cage Films",
ylab = "Number of UK A&E Admissions (millions)",
xlim = c(1,5), ylim = c(1.0e+07, 2.5e+07),
yaxt = "n",
main = "Nicolas Cage vs. A&E")
axis(side = 2, at = seq.int(1.0e+07,2.5e+07,length.out = 5),
labels = seq.int(1.0e+07,2.5e+07,length.out = 5)/1000000)
pred = lm(unlist(attend[1:23,2]) ~ as.numeric(film_freq)[1:23])
#abline(pred, lty = 2, col= "red", lwd=2)
abline(v = 5, h = (pred$coefficients[1]+pred$coefficients[2]*5), col = "blue", lty = 2)
points(x = 5, y = 21380985, pch = 15, cex = 2, col = "red")
legend("topright", lty = c(2,NA), pch = c(NA,15),
col = c("blue","red"), lwd = 2,
legend = c(paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
dev.copy(png,"freqvsattend.png",width=8,height=7,units="in",res=100)
dev.off()
# Plot film frequency vs Admissions
plot(y = as.numeric(unlist(attend[1:23,2])),
x = as.numeric(film_freq[1:23]),
xlab = "Number of Nicolas Cage Films",
ylab = "Number of UK A&E Attendances (millions)",
xlim = c(1,5), ylim = c(1.0e+07, 2.5e+07),
yaxt = "n",
main = "Nicolas Cage vs. A&E")
axis(side = 2, at = seq.int(1.0e+07,2.5e+07,length.out = 5),
labels = seq.int(1.0e+07,2.5e+07,length.out = 5)/1000000)
pred = lm(unlist(attend[1:23,2]) ~ as.numeric(film_freq)[1:23])
#abline(pred, lty = 2, col= "red", lwd=2)
abline(v = 5, h = (pred$coefficients[1]+pred$coefficients[2]*5), col = "blue", lty = 2)
points(x = 5, y = 21380985, pch = 15, cex = 2, col = "red")
legend("topright", lty = c(2,NA), pch = c(NA,15),
col = c("blue","red"), lwd = 2,
legend = c(paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
dev.copy(png,"freqvsattend.png",width=8,height=7,units="in",res=100)
dev.off()
abline(pred, lty = 2, col= "red", lwd=2)
plot(y = as.numeric(unlist(attend[1:23,2])),
x = as.numeric(film_freq[1:23]),
xlab = "Number of Nicolas Cage Films",
ylab = "Number of UK A&E Attendances (millions)",
xlim = c(1,5), ylim = c(1.0e+07, 2.5e+07),
yaxt = "n",
main = "Nicolas Cage vs. A&E")
axis(side = 2, at = seq.int(1.0e+07,2.5e+07,length.out = 5),
labels = seq.int(1.0e+07,2.5e+07,length.out = 5)/1000000)
pred = lm(unlist(attend[1:23,2]) ~ as.numeric(film_freq)[1:23])
abline(pred, lty = 2, col= "red", lwd=2)
abline(v = 5, h = (pred$coefficients[1]+pred$coefficients[2]*5), col = "blue", lty = 2)
points(x = 5, y = 21380985, pch = 15, cex = 2, col = "red")
legend("topright", lty = c(2,NA), pch = c(NA,15),
col = c("blue","red"), lwd = 2,
legend = c(paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
dev.copy(png,"freqvsattend.png",width=8,height=7,units="in",res=100)
dev.off()
plot(y = as.numeric(unlist(attend[1:23,2])),
x = as.numeric(film_freq[1:23]),
xlab = "Number of Nicolas Cage Films",
ylab = "Number of UK A&E Attendances (millions)",
xlim = c(1,5), ylim = c(1.0e+07, 2.5e+07),
yaxt = "n",
main = "Nicolas Cage vs. A&E")
axis(side = 2, at = seq.int(1.0e+07,2.5e+07,length.out = 5),
labels = seq.int(1.0e+07,2.5e+07,length.out = 5)/1000000)
pred = lm(unlist(attend[1:23,2]) ~ as.numeric(film_freq)[1:23])
abline(pred, lty = 2, col= "red", lwd=2)
abline(v = 5, h = (pred$coefficients[1]+pred$coefficients[2]*5), col = "blue", lty = 3)
points(x = 5, y = 21380985, pch = 15, cex = 2, col = "red")
legend("topright", lty = c(3,NA), pch = c(NA,15),
col = c("blue","red"), lwd = 2,
legend = c(paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
dev.copy(png,"freqvsattend.png",width=8,height=7,units="in",res=100)
dev.off()
plot(cage$startYear[order(cage$startYear)],
cage$averageRating[order(cage$startYear)], type = "l",
xlim=c(1983,2020), ylim=c(0,10), ylab="Average Rating",
xlab = "Release Year")
pred.loess = loess(averageRating~startYear, filter(cage, startYear < 1990), surface = "direct")
lines(x = 1983:2013, y = predict(pred.loess, newdata = 1983:2013),lwd=2,col="red",
lty = 2)
plot(cage$startYear[order(cage$startYear)],
cage$averageRating[order(cage$startYear)], type = "l",
xlim=c(1983,2020), ylim=c(0,10), ylab="Average Rating",
xlab = "Release Year")
cage
df_ratings <- read_tsv("title.ratings.tsv.gz",na="\\N",quote='')
cage <- left_join(cage, df_ratings)
rm(df_ratings)
cage <- cage[,c(4:11)]
setwd("~/GitHub/nick")
# Get ratings details
df_ratings <- read_tsv("data/title.ratings.tsv.gz",na="\\N",quote='')
cage <- left_join(cage, df_ratings)
rm(df_ratings)
cage <- cage[,c(4:11)]
summary(cage$averageRating)
summary(cage$numVotes)
plot(cage$startYear[order(cage$startYear)],
cage$averageRating[order(cage$startYear)], type = "l",
xlim=c(1983,2020), ylim=c(0,10), ylab="Average Rating",
xlab = "Release Year")
abline(lm(averageRating~startYear, filter(cage, startYear < 1992)),col="red",lwd=2)
plot(cage$startYear[order(cage$startYear)],
cage$averageRating[order(cage$startYear)], type = "l",
xlim=c(1983,2020), ylim=c(0,10), ylab="Average Rating",
xlab = "Release Year")
abline(lm(averageRating~startYear, filter(cage, startYear < 2000)),col="red",lwd=2)
plot(cage$startYear[order(cage$startYear)],
cage$averageRating[order(cage$startYear)], type = "l",
xlim=c(1983,2020), ylim=c(0,10), ylab="Average Rating",
xlab = "Release Year")
abline(lm(averageRating~startYear, filter(cage, startYear < 2020)),col="red",lwd=2)
plot(cage$startYear[order(cage$startYear)],
cage$averageRating[order(cage$startYear)], type = "l",
xlim=c(1983,2020), ylim=c(0,10), ylab="Average Rating",
xlab = "Release Year")
abline(lm(averageRating~startYear, cage90),col="red",lwd=2)
ggplot(filter(cage,numVotes>=1000),aes(x=startYear,y=averageRating)) +
geom_bin2d() +
geom_smooth(color="black") +
scale_x_continuous() +
scale_y_continuous(breaks=1:10) +
scale_fill_viridis(option = "plasma", labels = comma)
ggplot(filter(cage,numVotes>=1000),aes(x=runtimeMinutes,y=averageRating)) +
geom_bin2d() +
geom_smooth(color="black") +
scale_x_continuous() +
scale_y_continuous(breaks=1:10) +
scale_fill_viridis(option = "plasma", labels = comma)
table(unlist(strsplit(cage$genres,split=",",fixed=T)))
cage$isAction <- str_detect(cage$genres,"Action")
cage$isAdventure <- str_detect(cage$genres,"Adventure")
cage$isAnimation <- str_detect(cage$genres,"Animation")
cage$isBiography <- str_detect(cage$genres,"Biography")
cage$isComedy <- str_detect(cage$genres,"Comedy")
cage$isCrime <- str_detect(cage$genres,"Crime")
cage$isDrama <- str_detect(cage$genres,"Drama")
cage$isFamily <- str_detect(cage$genres,"Family")
cage$isFantasy <- str_detect(cage$genres,"Fantasy")
cage$isHistory <- str_detect(cage$genres,"History")
cage$isHorror <- str_detect(cage$genres,"Horror")
cage$isMusic <- str_detect(cage$genres,"Music")
cage$isMystery <- str_detect(cage$genres,"Mystery")
cage$isRomance <- str_detect(cage$genres,"Romance")
cage$isSciFi <- str_detect(cage$genres,"Sci-Fi")
cage$isSport <- str_detect(cage$genres,"Sport")
cage$isThriller <- str_detect(cage$genres,"Thriller")
cage$isWar <- str_detect(cage$genres,"War")
genres = c("Action","Adventure","Animation","Biography","Comedy","Crime",
"Drama","Family","Fantasy","History","Horror",
"Music","Mystery","Romance","SciFi","Sport","Thriller","War")
genre_rating = data.frame()
for(genre in genres){
genre_rating <- rbind(genre_rating,summary(filter(cage,get(paste("is",genre,sep="")))$averageRating))
}
colnames(genre_rating) = c("Min","Q1","Med","Mean","Q3","Max")
rownames(genre_rating) = genres
genre_rating$Genre = genres
ggplot(genre_rating,aes(x=Genre,y=Mean)) +
geom_errorbar(aes(ymin=Q1,ymax=Q3),width=0.1) +
geom_point(stat="identity") +
geom_text(aes(label=Genre), vjust=1.5, color="blue", size=3) +
theme(axis.text.x=element_blank())
rm(genre_rating)
cage
plot(y = as.numeric(film_freq)[1:23],
x = unlist(attend[1:23,1]),
ylab = "Number of Nicolas Cage Films",
xlab = "Year",
main = "Nicolas Cage Films vs. Year",
xlim = c(1985,2015))
pred = lm(as.numeric(film_freq[1:23])~unlist(attend[1:23,1]))
abline(pred,col="red")
# Plot film frequency vs Admissions
plot(y = as.numeric(unlist(attend[1:23,2])),
x = as.numeric(film_freq[1:23]),
xlab = "Number of Nicolas Cage Films",
ylab = "Number of UK A&E Attendances (millions)",
xlim = c(1,5), ylim = c(1.0e+07, 2.5e+07),
yaxt = "n",
main = "Nicolas Cage vs. A&E")
axis(side = 2, at = seq.int(1.0e+07,2.5e+07,length.out = 5),
labels = seq.int(1.0e+07,2.5e+07,length.out = 5)/1000000)
pred = lm(unlist(attend[1:23,2]) ~ as.numeric(film_freq)[1:23])
abline(pred, lty = 2, col= "red", lwd=1)
abline(pred, lty = 1, col= "red", lwd=2)
# Plot film frequency vs Admissions
plot(y = as.numeric(unlist(attend[1:23,2])),
x = as.numeric(film_freq[1:23]),
xlab = "Number of Nicolas Cage Films",
ylab = "Number of UK A&E Attendances (millions)",
xlim = c(1,5), ylim = c(1.0e+07, 2.5e+07),
yaxt = "n",
main = "Nicolas Cage vs. A&E")
axis(side = 2, at = seq.int(1.0e+07,2.5e+07,length.out = 5),
labels = seq.int(1.0e+07,2.5e+07,length.out = 5)/1000000)
pred = lm(unlist(attend[1:23,2]) ~ as.numeric(film_freq)[1:23])
abline(pred, lty = 1, col= "red", lwd=2)
abline(v = 5, h = (pred$coefficients[1]+pred$coefficients[2]*5), col = "blue", lty = 3)
points(x = 5, y = 21380985, pch = 15, cex = 2, col = "red")
legend("topright", lty = c(1,3,NA), pch = c(NA,15),
col = c("red","blue","red"), lwd = 2,
legend = c("Predictive model",
paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
legend("topright", lty = c(1,3,NA), pch = c(NA,NA,15),
col = c("red","blue","red"), lwd = 2,
legend = c("Predictive model",
paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
points(x = 5, y = 21380985, pch = 15, cex = 2, col = "purple")
plot(y = as.numeric(unlist(attend[1:23,2])),
x = as.numeric(film_freq[1:23]),
xlab = "Number of Nicolas Cage Films",
ylab = "Number of UK A&E Attendances (millions)",
xlim = c(1,5), ylim = c(1.0e+07, 2.5e+07),
yaxt = "n",
main = "Nicolas Cage vs. A&E")
axis(side = 2, at = seq.int(1.0e+07,2.5e+07,length.out = 5),
labels = seq.int(1.0e+07,2.5e+07,length.out = 5)/1000000)
pred = lm(unlist(attend[1:23,2]) ~ as.numeric(film_freq)[1:23])
abline(pred, lty = 1, col= "red", lwd=2)
abline(v = 5, h = (pred$coefficients[1]+pred$coefficients[2]*5), col = "blue", lty = 3)
points(x = 5, y = 21380985, pch = 15, cex = 2, col = "purple")
legend("topright", lty = c(1,3,NA), pch = c(NA,NA,15),
col = c("red","blue","purple"), lwd = 2,
legend = c("Predictive model",
paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
dev.copy(png,"freqvsattend.png",width=8,height=7,units="in",res=100)
dev.off()
legend("topright", lty = c(1,3,NA), pch = c(NA,NA,15),
col = c("red","blue","purple"), lwd = 1,
legend = c("Predictive model",
paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
setwd("~/Google Drive/A Call to Ears/images")
plot(y = as.numeric(unlist(attend[1:23,2])),
x = as.numeric(film_freq[1:23]),
xlab = "Number of Nicolas Cage Films",
ylab = "Number of UK A&E Attendances (millions)",
xlim = c(1,5), ylim = c(1.0e+07, 2.5e+07),
yaxt = "n",
main = "Nicolas Cage vs. A&E")
axis(side = 2, at = seq.int(1.0e+07,2.5e+07,length.out = 5),
labels = seq.int(1.0e+07,2.5e+07,length.out = 5)/1000000)
pred = lm(unlist(attend[1:23,2]) ~ as.numeric(film_freq)[1:23])
abline(pred, lty = 1, col= "red", lwd=2)
abline(v = 5, h = (pred$coefficients[1]+pred$coefficients[2]*5), col = "blue", lty = 3)
points(x = 5, y = 21380985, pch = 15, cex = 2, col = "purple")
legend("topright", lty = c(1,3,NA), pch = c(NA,NA,15),
col = c("red","blue","purple"), lwd = 2,
legend = c("Predictive model",
paste("Our Prediction =",
prettyNum(pred$coefficients[1]+pred$coefficients[2]*5,big.mark=","),
"attendances."),
"The actual number of attendances = 21,380,985!"))
dev.copy(png,"freqvsattend.png",width=8,height=7,units="in",res=100)
dev.off()
setwd("~/GitHub/distr6")
devtools::document()
devtools::load_all()
?CoreStatistics
devtools::document()
devtools::load_all()
?CoreStatistics
?CoreStatistics
devtools::document()
devtools::load_all()
?mgf.Distribution
?mgf
devtools::document()
devtools::load_all()
?CoreStatistics
Binomial$new()
devtools::document()
devtools::document()
?generalPNorm
devtools::document()
?generalPNorm
devtools::document()
?generalPNorm
U+222B
222B
"U+222B"
"U222B"
"222B"
"\U222B"
devtools::document()
?generalPNorm
"\U222B"
devtools::document()
?generalPNorm
?ExoticStatistics
devtools::document()
?FunctionImputation
?DistributionDecorator
listDecorators()
listDecorators(F)
listDecorators(T)
?ArrayDistribution
?ProductDistribution
?HuberizedDistribution
listWrappers(F)
listWrappers(T)
?MixtureDistribution
devtools::document()
?MixtureDistribution
?Scale
devtools::document()
?ArrayDistribution
devtools::document()
?HuberizedDistribution
?HuberizedDistribution
devtools::document()
?HuberizedDistribution
devtools::document()
?HuberizedDistribution
devtools::document()
?HuberizedDistribution
?MixtureDistribution
devtools::document()
?MixtureDistribution
devtools::document()
?MixtureDistribution
devtools::document()
?MixtureDistribution
devtools::document()
?ProductDistribution
devtools::document()
?Scale
devtools::document()
?Scale
devtools::document()
?TruncatedDistribution
?DistributionWrapper
Binomial$new()
x=Binomial$new()
devtools::document()
devtools::document()
?Wrapper
?DistributionWrapper
devtools::document()
?DistributionWrapper
devtools::document()
?DistributionWrapper
devtools::document()
?DistributionWrapper
devtools::document()
?DistributionWrapper
devtools::document()
?DistributionWrapper
