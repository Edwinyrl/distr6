Spain,
Switzerland,
Italy,
Ukraine,
Austria,
Russia,
Belgium,
Monaco,
Turkey,
Azerbaijan,
Greece,
Estonia,
Latvia,
Serbia,
Yugoslavia,
Finland,
Portugal,
Iceland,
Malta,
Bulgaria,
Cyprus,
Australia,
Poland,
Serbia and Montenegro,
Romania,
Bosnia and Herzegovina,
Moldova,
Croatia,
Hungary,
Armenia,
Albania,
Lithuania,
Belarus,
Czech Republic,
Slovenia,
Georgia,
Macedonia,
Montenegro,
Slovakia,
Morocco,
San Marino,
Andorra
)
install.packages("R62S3")
citation("R62S3")
install.packages("badgecreatr")
library(badgecreatr)
?badgecreatr
cite("R62S3")
citation("R62S3")
remotes::install_github("RaphaelS1/distr6")
library(distr6)
?remotes
?remotes::install_github
remotes::install_github("RaphaelS1/distr6","dev")
library(distr6)
remotes::install_github("RaphaelS1/distr6","dev")
remotes::install_github("RaphaelS1/distr6","dev")
remotes::install_github("RaphaelS1/distr6","dev")
remotes::install_github("RaphaelS1/distr6","dev")
library(distr6)
library(distr6)
as.environment("package:distr6")
remotes::install_github("RaphaelS1/distr6","dev")
library(distr6)
remotes::install_github("RaphaelS1/distr6","dev")
library(distr6)
remotes::install_github("RaphaelS1/distr6")
library(distr6)
listDistributions()
listWrappers()
listDecorators()
library(distr6)
listDistributions()
listWrappers(simplify = TRUE)
listDecorators(simplify = TRUE)
library(distr6)
listDistributions()
listWrappers(simplify = TRUE)
listDecorators(simplify = TRUE)
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
pdf.Distribution(B, 1:10)
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
#pdf.Distribution(B, 1:10)
cdf(B, 1:10)
remotes::install_github("RaphaelS1/distr6", ref = "dev")
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
pdf.Distribution(B, 1:10)
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
#pdf.Distribution(B, 1:10)
cdf(B, 1:10)
library(distr6)
remotes::install_github("RaphaelS1/distr6","dev")
library(distr6)
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
#pdf.Distribution(B, 1:10)
cdf(B, 1:10)
quantile(seq.int(0,1,length.out=10))
# Option 3
B %>% cdf(1:10)
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
#pdf.Distribution(B, 1:10)
cdf(B, 1:10)
quantile(seq.int(0,1,length.out=10))
# Option 3
library(magrittr)
B %>% cdf(1:10)
B$mean() # via R6
B$expectation()
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
#pdf.Distribution(B, 1:10)
cdf(B, 1:10)
quantile(seq.int(0,1,length.out=10))
# Option 3
library(magrittr)
B %>% cdf(1:10)
B$expectation() # via R6
kurtosis(B) # via S3
B$kurtosis()
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
#pdf.Distribution(B, 1:10)
cdf(B, 1:10)
quantile(seq.int(0,1,length.out=10))
# Option 3
library(magrittr)
B %>% cdf(1:10)
B$expectation() # via R6
summary(B)
listDistributions()
listWrappers(simplify = TRUE)
listDecorators(simplify = TRUE)
B$decorators
remotes::install_github("RaphaelS1/distr6","dev")
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
#pdf.Distribution(B, 1:10)
cdf(B, 1:10)
quantile(seq.int(0,1,length.out=10))
# Option 3
library(magrittr)
B %>% cdf(1:10)
B$expectation() # via R6
summary(B)
listDistributions()
listWrappers(simplify = TRUE)
listDecorators(simplify = TRUE)
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
#pdf.Distribution(B, 1:10)
cdf(B, 1:10)
quantile(seq.int(0,1,length.out=10))
# Option 3
library(magrittr)
B %>% cdf(1:10)
B$expectation() # via R6
summary(B)
listDistributions()
listWrappers(simplify = TRUE)
listDecorators(simplify = TRUE)
B$summary
remotes::install_github("RaphaelS1/distr6","dev")
library(distr6)
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
#pdf.Distribution(B, 1:10)
cdf(B, 1:10)
quantile(seq.int(0,1,length.out=10))
# Option 3
library(magrittr)
B %>% cdf(1:10)
B$expectation() # via R6
summary(B)
listDistributions()
listWrappers(simplify = TRUE)
listDecorators(simplify = TRUE)
summary(Binomial$new())
summary(Distribution$new("ds",pdf=dbinom))
Distribution$new("ds",pdf=dbinom)$summary()
x=Distribution$new("ds",pdf=dbinom)
x$.__enclos_env__$private$.parameters
length(x$.__enclos_env__$private$.parameters)
setwd("~/GitHub/distr6")
devtools::check()
B = Binomial$new()
decorate(B, "ExoticStatistics")
ExoticStatistics$new(B)
decorate(B, ExoticStatistics)
B$survivalAntiDeriv()
N <- Normal$new()
N
decorate(N, ExoticStatistics)
N$survivalAntiDeriv()
N$survivalAntiDeriv(lower = 1, upper = 4)
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
cdf(B, 1:10)
# Option 3
library(magrittr)
B %>% cdf(1:10)
B$expectation() # via R6
summary(B)
listDistributions()
listDistributions(traits = list(valueSupport = "discrete"))
N <- Normal$new()
N$survivalAntiDeriv()
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
cdf(B, 1:10)
# Option 3
library(magrittr)
B %>% cdf(1:10)
B$expectation() # via R6
summary(B)
listDistributions()
listDistributions(traits = list(valueSupport = "discrete"))
N <- Normal$new()
# N$survivalAntiDeriv() - Produces an error as it currently doesn't exist as a method
decorate(N, ExoticStatistics) # Alternatively: ExoticStatistics$new(N)
N$survivalAntiDeriv(lower = 1, upper = 4)
TN = TruncatedDistribution$new(N, lower = 0, upper = 5) # Alternatively: truncate(N, lower = 0, upper = 5)
TN$pdf(6)
TN$pdf(0)
print(TN)
listDistributions()
listWrappers(simplify = TRUE)
listDecorators(simplify = TRUE)
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
cdf(B, 1:10)
# Option 3
library(magrittr)
B %>% cdf(1:10)
B$expectation() # via R6
summary(B)
listDistributions()
listDistributions(traits = list(valueSupport = "discrete"))
N <- Normal$new()
# N$survivalAntiDeriv() - Produces an error as it currently doesn't exist as a method
decorate(N, ExoticStatistics) # Alternatively: ExoticStatistics$new(N)
N$survivalAntiDeriv(lower = 1, upper = 4)
TN = TruncatedDistribution$new(N, lower = 0, upper = 5) # Alternatively: truncate(N, lower = 0, upper = 5)
TN$pdf(6)
TN$pdf(0)
TN$pdf(2)
print(TN)
listDistributions()
listWrappers(simplify = TRUE)
listDecorators(simplify = TRUE)
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
cdf(B, 1:10)
# Option 3
library(magrittr)
B %>% cdf(1:10)
B$expectation() # via R6
summary(B)
listDistributions()
listDistributions(traits = list(valueSupport = "discrete"))
N <- Normal$new()
# N$survivalAntiDeriv() - Produces an error as it currently doesn't exist as a method
decorate(N, ExoticStatistics) # Alternatively: ExoticStatistics$new(N)
N$survivalAntiDeriv(lower = 1, upper = 4)
TN = TruncatedDistribution$new(N, lower = 0, upper = 5) # Alternatively: truncate(N, lower = 0, upper = 5)
TN$pdf(6)
TN$pdf(0)
TN$pdf(2)
print(TN)
listWrappers(simplify = TRUE)
listDecorators(simplify = TRUE)
Normal$new(mean= 0, sd = 1)
Normal$new(mean = 0, var = 1)
Normal$new(mean = 0, prec = 2)
N <- Normal$new(mean = 0, sd = 2)
N$parameters()
N$setParameterValue(list(sd = 3))
N$parameters()
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
cdf(B, 1:10)
# Option 3
library(magrittr)
B %>% cdf(1:10)
B$expectation() # via R6
summary(B)
listDistributions()
listDistributions(traits = list(valueSupport = "discrete"))
N <- Normal$new()
# N$survivalAntiDeriv() - Produces an error as it currently doesn't exist as a method
decorate(N, ExoticStatistics) # Alternatively: ExoticStatistics$new(N)
N$survivalAntiDeriv(lower = 1, upper = 4)
TN = TruncatedDistribution$new(N, lower = 0, upper = 5) # Alternatively: truncate(N, lower = 0, upper = 5)
TN$pdf(6)
TN$pdf(0)
TN$pdf(2)
print(TN)
listWrappers(simplify = TRUE)
listDecorators(simplify = TRUE)
Normal$new(mean= 0, sd = 1)
Normal$new(mean = 0, var = 1)
Normal$new(mean = 0, prec = 2)
N <- Normal$new(mean = 0, sd = 2)
N$parameters()
N$setParameterValue(list(sd = 3))
N$parameters()
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
cdf(B, 1:10)
# Option 3
library(magrittr)
B %>% cdf(1:10)
B$expectation() # via R6
summary(B)
listDistributions()
listDistributions(traits = list(valueSupport = "discrete"))
N <- Normal$new()
# N$survivalAntiDeriv() - Produces an error as it currently doesn't exist as a method
decorate(N, ExoticStatistics) # Alternatively: ExoticStatistics$new(N)
N$survivalAntiDeriv(lower = 1, upper = 4)
TN = TruncatedDistribution$new(N, lower = 0, upper = 5) # Alternatively: truncate(N, lower = 0, upper = 5)
TN$pdf(6)
TN$pdf(0)
TN$pdf(2)
print(TN)
listWrappers(simplify = TRUE)
listDecorators(simplify = TRUE)
Normal$new(mean= 0, sd = 1)
Normal$new(mean = 0, var = 1)
Normal$new(mean = 0, prec = 2)
N <- Normal$new(mean = 0, sd = 2)
N$parameters()
N$setParameterValue(list(sd = 3))
N$parameters()
library(distr6)
dbinom(1:10, size = 10, prob = 0.5)
pbinom(1:10, size = 10, prob = 0.5)
qbinom(seq.int(0,1,length.out=10),size = 10, prob = 0.5)
B <- Binomial$new(size = 10, prob = 0.5)
# Option 1
B$pdf(1:10)
B$cdf(1:10)
B$quantile(seq.int(0,1,length.out=10))
# Option 2
cdf(B, 1:10)
# Option 3
library(magrittr)
B %>% cdf(1:10)
B$expectation() # via R6
summary(B)
listDistributions()
listDistributions(traits = list(valueSupport = "discrete"))
N <- Normal$new()
# N$survivalAntiDeriv() - Produces an error as it currently doesn't exist as a method
decorate(N, ExoticStatistics) # Alternatively: ExoticStatistics$new(N)
N$survivalAntiDeriv(lower = 1, upper = 4)
TN = TruncatedDistribution$new(N, lower = 0, upper = 5) # Alternatively: truncate(N, lower = 0, upper = 5)
TN$pdf(6)
TN$pdf(0)
TN$pdf(2)
print(TN)
listWrappers(simplify = TRUE)
listDecorators(simplify = TRUE)
Normal$new(mean= 0, sd = 1)
Normal$new(mean = 0, var = 1)
Normal$new(mean = 0, prec = 2)
N <- Normal$new(mean = 0, sd = 2)
N$parameters()
N$setParameterValue(list(sd = 3))
N$parameters()
